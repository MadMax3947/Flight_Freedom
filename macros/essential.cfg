# wmllint: no translatables

#undef MAP
#define MAP NUMBER
    map_file=~add-ons/Flight_Freedom/maps/drake{NUMBER}.map
#enddef

#undef MAPB
#define MAPB NUMBER
    map_file=~add-ons/Flight_Freedom/maps_b/drake{NUMBER}.map
#enddef

#define NARRATOR_ICON
    image="misc/icon-drake.png"
    second_image="misc/icon-drake.png"
#enddef

#define LAVA_DAMAGE
    [event]
        name=new turn
        first_time_only=no
        [harm_unit]
            [filter]
                [filter_location]
                    terrain=Yl
                [/filter_location]
                [not]
                    type=Lava Monster, Lava Beast
                [/not]
            [/filter]
            amount=4
            kill=no
        [/harm_unit]
    [/event]
#enddef

#define DRAKE_GUARD_STONE X Y SIDE
    [unit]
        type=Drake Guard
        x={X}
        y={Y}
        side={SIDE}
        [status]
            stone=on
        [/status]
    [/unit]
#enddef

#define RDRAKE_GUARD_STONE X Y SIDE
    [unit]
        type=Drake Guard
        x={X}
        y={Y}
        side={SIDE}
        [status]
            stone=on
        [/status]
        facing=sw
    [/unit]
#enddef

#TODO: update this to use [store_time_of_day]
#gargoyle stoning code
#define STONE_GARGOYLES TURN SIDE
    [event]
        name=turn {TURN}
        #removes the ability to recruit gargoyles during the day
        [disallow_recruit]
            side={SIDE}
            type=Gargoyle
        [/disallow_recruit]
        [petrify]
            type=Gargoyle
        [/petrify]
    [/event]
#enddef

#define UNSTONE_GARGOYLES TURN SIDE
    [event]
        name=turn {TURN}
        [allow_recruit]
            side={SIDE}
            type=Gargoyle
        [/allow_recruit]
        [unpetrify]
            type=Gargoyle
        [/unpetrify]
    [/event]
#enddef

#included in every scenario
#empty so far
#define FTF_COMMON

#enddef

#define MESSAGE_ON_FIRST_UNIT MESSAGE
    [message]
        speaker=unit
        message={MESSAGE}
    [/message]
#enddef

#define MESSAGE_ON_SECOND_UNIT MESSAGE
    [message]
        speaker=second_unit
        message={MESSAGE}
    [/message]
#enddef

#define CLEAR_SHROUD SIDE X Y RADIUS
    # Clears fog in a specific area for the given side.
    [remove_shroud]
        [filter_side]
            side={SIDE}
        [/filter_side]
        x,y={X},{Y}
        radius={RADIUS}
    [/remove_shroud]
#enddef

#define SPIDERWEB_SLOWING X Y SIDE
    [event]
        name=side turn
        first_time_only=no
        [if]
            [have_unit]
                x={X}
                y={Y}
                side={SIDE}
            [/have_unit]
            [then]
                [store_unit]
                    [filter]
                        x={X}
                        y={Y}
                        side={SIDE}
                    [/filter]
                    variable=webbed_guys
                [/store_unit]
                [foreach]
                    array=webbed_guys
                    variable=this_item
                    readonly=no
                    [do]
                        {VARIABLE this_item.status.slowed yes}
                        [unstore_unit]
                            variable=this_item
                        [/unstore_unit]
                    [/do]
                [/foreach]
                {CLEAR_VARIABLE webbed_guys}
                #would be more straightforward, but the floating labels every side turn are IMO distracting
#ifdef BE_MORE_STRAIGHTFORWARD_BUT_DISTRACTING
                [harm_unit]
                    [filter]
                        x={X}
                        y={Y}
                        side={SIDE}
                    [/filter]
                    amount=0
                    slowed=yes
                    animate=no
                [/harm_unit]
#endif
            [/then]
        [/if]
    [/event]
#enddef

#define FIRE_EVENT_ON_STUMBLE_UPON _EVT_ID _SUF
    [event]
        name=sighted
        [filter]
            {_SUF}
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [redraw][/redraw]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x2,$y2
            [/primary_unit]
            [secondary_unit]
                x,y=$x1,$y1
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        name=sighted
        [filter]
            side=1
        [/filter]
        [filter_second]
            {_SUF}
        [/filter_second]
        [redraw][/redraw]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
            [secondary_unit]
                x,y=$x2,$y2
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        name=attack
        [filter]
            {_SUF}
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x2,$y2
            [/primary_unit]
            [secondary_unit]
                x,y=$x1,$y1
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        name=attack
        [filter]
            side=1
        [/filter]
        [filter_second]
            {_SUF}
        [/filter_second]
        [fire_event]
            name={_EVT_ID}
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
            [secondary_unit]
                x,y=$x2,$y2
            [/secondary_unit]
        [/fire_event]
    [/event]
#enddef

#designed by Elvish_Hunter
#define HEX_SIGHTED_EVENT X Y SIDE
    name=moveto
    [filter]
        side={SIDE}
    [/filter]
    [filter_condition]
        [have_location]
            x,y={X},{Y}
            [filter_vision]
                visible=yes
                respect_fog=yes
                side={SIDE}
            [/filter_vision]
        [/have_location]
    [/filter_condition]
#enddef

#there almost has to be a better way to do this
#define HEX_SIGHTED_EVENT_TWOSIDES X Y SIDE1 SIDE2
    name=moveto
    [filter]
        side={SIDE1}
        [or]
            side={SIDE2}
        [/or]
    [/filter]
    [filter_condition]
        [have_location]
            x,y={X},{Y}
            [filter_vision]
                visible=yes
                respect_fog=yes
                side={SIDE1}
            [/filter_vision]
        [/have_location]
        [or]
            [have_location]
                x,y={X},{Y}
                [filter_vision]
                    visible=yes
                    respect_fog=yes
                    side={SIDE2}
                [/filter_vision]
            [/have_location]
        [/or]
    [/filter_condition]
#enddef

#define DELIVERY_ITEM X Y XVAR YVAR IMAGE OVERLAY CARRYVAR
    [event]
        name=prestart
        {VARIABLE {XVAR} {X}}
        {VARIABLE {YVAR} {Y}}
        {VARIABLE {CARRYVAR} null}

        [item]
            x=${XVAR}
            y=${YVAR}
            image={IMAGE}
        [/item]
    [/event]

    [event]
        name=moveto
        first_time_only=no
        [filter]
            x=${XVAR}
            y=${YVAR}
        [/filter]

        [if]
            [variable]
                name={CARRYVAR}
                equals=null
            [/variable]
            [then]
                {VARIABLE {CARRYVAR} $unit.id}

                [remove_item]
                    x=${XVAR}
                    y=${YVAR}
                    image={IMAGE}
                [/remove_item]
                [unit_overlay]
                    x=${XVAR}
                    y=${YVAR}
                    image={OVERLAY}
                [/unit_overlay]
            [/then]
        [/if]
    [/event]

    [event]
        name=die
        [filter]
            id=${CARRYVAR}
        [/filter]
        first_time_only=no

        {VARIABLE {XVAR} $x1}
        {VARIABLE {YVAR} $y1}
        {VARIABLE {CARRYVAR} null}

        [item]
            x=$x1
            y=$y1
            image={IMAGE}
        [/item]
    [/event]

#enddef

#inspired by the similar event in Wings of Victory
#define RECRUIT_RUN_FILTER X1 Y1 X2 Y2 SIDE EXTRA_FILTER
    [event]
        name=prerecruit,prerecall
        first_time_only=no
        [filter]
            side={SIDE}
            x,y={X2},{Y2}
            {EXTRA_FILTER}
        [/filter]
        [store_unit]
            [filter]
                x,y={X2},{Y2}
            [/filter]
            kill=yes
            variable=recruit_store
        [/store_unit]
        [unstore_unit]
            variable=recruit_store
            x,y={X1},{Y1}
        [/unstore_unit]
        [move_unit]
            x,y={X1},{Y1}
            to_x={X2}
            to_y={Y2}
        [/move_unit]
        {CLEAR_VARIABLE recruit_store}
    [/event]
#enddef

#define RECRUIT_RUN X1 Y1 X2 Y2 SIDE
    {RECRUIT_RUN_FILTER {X1} {Y1} {X2} {Y2} {SIDE} ()}
#enddef

#moved from Landfall to here since it's also used by Southern Shore, and I may want to do something else with it later
#define WESNOTH_THIRD_FLEET_APPEARANCE X Y SIDE
    [unit]
        x,y={X},{Y}
        type=Dreadnought
        side={SIDE}
        generate_name=yes
    [/unit]
    [unit]
        x,y={X},{Y}
        type=Dreadnought
        side={SIDE}
        generate_name=yes
    [/unit]
    [unit]
        x,y={X},{Y}
        type=Dreadnought
        side={SIDE}
        generate_name=yes
    [/unit]
    [unit]
        x,y={X},{Y}
        type=Dreadnought
        side={SIDE}
        generate_name=yes
    [/unit]
    [unit]
        x,y={X},{Y}
        type=Dreadnought
        side={SIDE}
        generate_name=yes
    [/unit]
    [unit]
        x,y={X},{Y}
        type=Battleship
        side={SIDE}
        generate_name=yes
    [/unit]
    [unit]
        x,y={X},{Y}
        type=Battleship
        side={SIDE}
        generate_name=yes
    [/unit]
    [scroll_to_unit]
        x,y={X},{Y}
    [/scroll_to_unit]
    [delay]
        time=1000
    [/delay]
#enddef
